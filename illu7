CentOS7
CentOS Linux release 7.3.1611 (Core) 

$ uname -a
Linux localhost.localdomain 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
===============================================================
Docker
https://www.phpini.com/linux/rhel-centos-7-install-docker

下載 & 安裝,   -y : 若有詢問使用者是否時, 自動回答y
$ sudo yum -y update 
$ sudo yum -y install docker docker-registry 

加入pu權限
$ cat /etc/group | grep docker
$ sudo groupadd docker
$ sudo usermod -aG docker <userName>

$ systemctl start docker 
$ systemctl enable docker
$ systemctl status docker.service 

$ docker run hello-world

$ docker --version
===============================================================
mysl 5.6
https://www.phpini.com/mysql/rhel-centos-yum-install-mysql

安裝 MySQL Repository
$ sudo rpm -Uvh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm 

安裝MySQL Server
$ sudo yum -y install mysql-community-server 

自動啟用MySQL
$ /usr/bin/systemctl enable mysqld 

手動啟用MySQL
$ /usr/bin/systemctl start mysqld 

MySQL執行密碼修改
$ /usr/bin/mysql_secure_installation 

建立使用者
> CREATE USER '<new-user>'@'localhost' IDENTIFIED BY '<newpassword>';

賦予讀取權限
> GRANT ALL PRIVILEGES ON newdatabase.* TO '<new-user>'@'localhost';
===============================================================
docker-mysql
https://severalnines.com/blog/mysql-docker-containers-understanding-basics

1. docker-mysql
$ docker pull mysql

本地端要先有mysql-client才能登入
$ sudo yum install -y mysql

docker image 建立 container (背景執行)
$ docker run -d --name=<container's name> --env="MYSQL_ROOT_PASSWORD=<password>" mysql 

看mysql啟動的Log
$ docker logs test-mysql

可以直接取得每次啟動的docker ip
$ docker inspect test-mysql | grep IPAddress

連進去Container囉!!
$ mysql -u <user> -p <password> -h <ip> -P <port>

來開時
> exit
$ docker stop mysql-test

將來再進去(Container要在, 只是還沒被啟動 docker ps -a要有)
$ docker start <container's name>


===============================================================
net-tools in docker
docker內, 若無法使用網路服務, 安裝它吧

# ifconfig
bash: ifconfig: command not found

# yum install net-tools

# ifconfig
-> success!

===============================================================
mongoDB in docker


$ docker run --name mongo -it mongo /bin/bash

$ sudo docker images
REPOSITORY              TAG                 IMAGE ID            CREATED             SIZE
docker.io/mongo         latest              88b7188af865        23 hours ago        358.3 MB
...

可以直接取得每次啟動的docker ip
$ docker inspect <containerName> | grep IPAddress

進入 docker 的 mongo
$ mongo --port <port> --host <ip>


===============================================================
install mongoDB 3.2 (只要改3.2為3.4, 也可裝3.4版)
http://blog.topspeedsnail.com/archives/6005

$ sudo vim /etc/yum.repos.d/mongodb-org.repo
[mongodb-org]
name=MongoDB 3.2 Repository
baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.2/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-3.2.asc


$ sudo yum install mongodb-org

啟動mongoDB
$ systemctl start mongod.service
$ systemctl enable mongod.service

啟動後,檢查mongoDB是否正在運行
$ ps auxw | grep mongod
$ systemctl status mongod 

加入下面兩行, 不再顯示警告訊息
$ sudo vi /etc/rc.local
echo never > /sys/kernel/mm/transparent_hugepage/enabled
echo never > /sys/kernel/mm/transparent_hugepage/defrag

加入下面1行
$ sudo vim /etc/security/limits.d/20-nproc.conf 	
mongod   soft  nproc   64000

$ systemctl restart mongod
重啟後, 就不會有亂七八糟的警告訊息了

===============================================================
vs code
https://code.visualstudio.com/docs/setup/linux

$ sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc

$ sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'

$ yum check-update

$ sudo yum -y install code

===============================================================
jdk1.8
徐老師的hadoop講義的安裝方式(下載java的rpm包來安裝)

$ wget http://ftp.wsisiz.edu.pl/pub/pc/pozyteczne%20oprogramowanie/java/jdk-8u131-linux-x64.rpm

$ sudo rpm -ivh jdk-8u131-linux-x64.rpm

$ sudo ln -s /usr/java/jdk1.8.0_131/ /usr/java/java

$ sudo vi /etc/profile
export JAVA_HOME=/usr/java/java
export JRE_HOME=$JAVA_HOME/jre
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib/rt.jar
export PATH=$PATH:$JAVA_HOME/bin

$ java -version
java version "1.8.0_131"
Java(TM) SE Runtime Environment (build 1.8.0_131-b11)
Java HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)

===============================================================
install Python
$ wget <python>

$ tar xf <python>.tar.xz
$ cd <python>

$ ./configure --enable-loadable-sqlite-extensions \
              --enable-shared \
              --prefix="\opt\python3"
$ make
$ sudo make install
$ ldconfig

安裝完後,開始設定環境變數（略）

底下開始安裝python3的pip
$ wget -0 /tmp/get-pip.py "https://bootstrap.pypa.io/get-pip.py"
$ export PYTHON_PIP_VERSION=9.0.1
$ python3 /tmp/get-pip.py "pip==$PYTHON_PIP_VERSION"
$ pip3 install --no-cache-dir --upgrade --force-reinstall "pip==$PYTHON_PIP_VERSION"

===============================================================
install Anaconda (python3.6.1)
https://www.continuum.io/downloads

$ wget https://repo.continuum.io/archive/Anaconda3-4.4.0-Linux-x86_64.sh

$ bash ./Anaconda3-4.4.0-Linux-x86_64.sh

$ cd 

加入環境變數
$ vi .bashrc
export anaconda_HOME="/home/tony/anaconda3/"
export PATH=$anaconda_HOME/bin:$PATH

$ source .bashrc

$ python --version
Python 3.6.1 :: Anaconda 4.4.0 (64-bit)

===============================================================
install Redis
https://redis.io/download

$ wget http://download.redis.io/releases/redis-3.2.9.tar.gz
$ tar xzf redis-3.2.9.tar.gz
$ cd redis-3.2.9
$ make

啟動方式:
terminal1 $ src/redis-server
terminal2 $ src/redis-cli

===============================================================
install scala

1.到官方網站下載scala-SDK.xxx.tar.gz後

$ tar zxf scala-SDK.xxx.tar.gz

加入環境變數
$ vi .bashrc
export scala_HOME="/home/tony/scala-2.12.2"
export PATH=$scala_HOME/bin:$PATH 

===============================================================
install git (CentOS7預設有git, 但是版本是1.8.x版)
https://www.digitalocean.com/community/tutorials/how-to-install-git-on-centos-7#set-up-git

安裝相依性套件
$ sudo yum groupinstall "Development Tools"
$ sudo yum install gettext-devel openssl-devel perl-CPAN perl-devel zlib-devel

到這邊 https://github.com/git/git/releases 可以看要下載的版本
$ wget https://github.com/git/git/archive/v2.13.2.tar.gz -O git.tar.gz

$ tar -zxf git.tar.gz

$ cd git-*

$ make configure

說明文件中, 遺漏了重要的 "--with-curl"會導致無法上傳下載, 在此補上
$ sudo yum install curl-devel
$ ./configure --prefix=/usr/local --with-curl

$ sudo make install

$ git --version
git version 2.13.2
===============================================================
PostgreSQL9.6
https://www.postgresql.org/download/linux/redhat/

安裝Repo
$ yum install https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm

主程式
$ sudo yum install -y postgresql96
$ sudo yum install -y postgresql96-server

啟動叢集
$ /usr/pgsql-9.6/bin/postgresql96-setup initdb

允許重開機後自動啟動服務
$ systemctl enable postgresql-9.6.service

立即啟動服務
$ systemctl start postgresql-9.6.service
===============================================================
安裝GeoDjango (非常大一包= =)(###失敗收場###)
https://docs.djangoproject.com/en/dev/ref/contrib/gis/install/

1.安裝python and Django
2.安裝Spatial libraries
3.安裝Geospatial database

1.（略)
yum -y install gdal

2.安裝Spatial Database
官方建議使用PostgreSQL with PostGIS
https://docs.djangoproject.com/en/dev/ref/contrib/gis/install/geolibs/

安裝順序如下
 - GEOS
 - PROJ.4
 - GDAL
 - PostgreSQL
 - PostGIS

- 安裝GEOS(C++ library for geometric operation, GeoDjango的預設地理操作函式庫)
$ wget http://download.osgeo.org/geos/geos-3.4.2.tar.bz2
$ tar xjf geos-3.4.2.tar.bz2
$ cd geos-3.4.2
$ ./configure
$ make
$ sudo make install 
$ sudo ldconfig       <- 用來確認動態函式庫的連結資訊
$ cd ..

- 安裝PROJ.4
$ wget http://download.osgeo.org/proj/proj-4.9.1.tar.gz
$ wget http://download.osgeo.org/proj/proj-datumgrid-1.5.tar.gz
$ tar xzf proj-4.9.1.tar.gz
$ cd proj-4.9.1/nad
$ tar xzf ../../proj-datumgrid-1.5.tar.gz
$ cd ..
$ ./configure
$ make
$ sudo make install
$ cd ..

- 安裝GDAL
$ wget http://download.osgeo.org/gdal/1.11.2/gdal-1.11.2.tar.gz
$ tar xzf gdal-1.11.2.tar.gz
$ cd gdal-1.11.2
$ ./configure
$ make # Go get some coffee, this takes a while.
$ sudo make install
$ cd ..

- 安裝PostgreSQL (底下是安裝9.2版, 2017/7, 最新版為9.6, 10.0beta出來了)
===============================================================


- 安裝PostGIS
$ sudo yum -y install libxml2-devel
$ svn checkout http://svn.osgeo.org/postgis/trunk/ postgis-2.3.4dev
$ wget http://postgis.net/stuff/postgis-2.3.4dev.tar.gz
$ tar zxf postgis-2.3.4dev.tar.gz

下式改為PostgreSQL的pg_config所在位置
$ ./configure --with-pgconfig=/usr/pgsql-9.4/bin/pg_config



登入PL-SQL
$ sudo su - postgres / sudo -u postgres -i



===============================================================
===============================================================
sshd無法啟動的原因
1.sshd未安裝
2.sshd未啟動
3.防火牆

1.安裝sshd
$ sudo yum -y install openssh-server
$ service sshd restart

2.檢查看看(應該要有下面兩個)
$ ps -e | grep ssh
xxxx ? 00:00:00 ssh-agent
xxxx ? 00:00:00 sshd

3.若出現下列狀況
$ ssh localhost
ssh: connect to host localhost port 22: Connection refused
請先依照第2點的說明查看是否有啟動ssh-agent及sshd才可以ssh localhost,
所以只要
$ service sshd restart
$ systemctl enable sshd(這個還不是非常確定是否可行)

